// Generated by gencpp from file gbrobot/navigate.msg
// DO NOT EDIT!


#ifndef GBROBOT_MESSAGE_NAVIGATE_H
#define GBROBOT_MESSAGE_NAVIGATE_H

#include <ros/service_traits.h>


#include <gbrobot/navigateRequest.h>
#include <gbrobot/navigateResponse.h>


namespace gbrobot
{

struct navigate
{

typedef navigateRequest Request;
typedef navigateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct navigate
} // namespace gbrobot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gbrobot::navigate > {
  static const char* value()
  {
    return "25d2f54ea8f8d764186091003fcf3502";
  }

  static const char* value(const ::gbrobot::navigate&) { return value(); }
};

template<>
struct DataType< ::gbrobot::navigate > {
  static const char* value()
  {
    return "gbrobot/navigate";
  }

  static const char* value(const ::gbrobot::navigate&) { return value(); }
};


// service_traits::MD5Sum< ::gbrobot::navigateRequest> should match 
// service_traits::MD5Sum< ::gbrobot::navigate > 
template<>
struct MD5Sum< ::gbrobot::navigateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gbrobot::navigate >::value();
  }
  static const char* value(const ::gbrobot::navigateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gbrobot::navigateRequest> should match 
// service_traits::DataType< ::gbrobot::navigate > 
template<>
struct DataType< ::gbrobot::navigateRequest>
{
  static const char* value()
  {
    return DataType< ::gbrobot::navigate >::value();
  }
  static const char* value(const ::gbrobot::navigateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gbrobot::navigateResponse> should match 
// service_traits::MD5Sum< ::gbrobot::navigate > 
template<>
struct MD5Sum< ::gbrobot::navigateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gbrobot::navigate >::value();
  }
  static const char* value(const ::gbrobot::navigateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gbrobot::navigateResponse> should match 
// service_traits::DataType< ::gbrobot::navigate > 
template<>
struct DataType< ::gbrobot::navigateResponse>
{
  static const char* value()
  {
    return DataType< ::gbrobot::navigate >::value();
  }
  static const char* value(const ::gbrobot::navigateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GBROBOT_MESSAGE_NAVIGATE_H
