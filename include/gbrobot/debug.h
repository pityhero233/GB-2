// Generated by gencpp from file gbrobot/debug.msg
// DO NOT EDIT!


#ifndef GBROBOT_MESSAGE_DEBUG_H
#define GBROBOT_MESSAGE_DEBUG_H

#include <ros/service_traits.h>


#include <gbrobot/debugRequest.h>
#include <gbrobot/debugResponse.h>


namespace gbrobot
{

struct debug
{

typedef debugRequest Request;
typedef debugResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct debug
} // namespace gbrobot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gbrobot::debug > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::gbrobot::debug&) { return value(); }
};

template<>
struct DataType< ::gbrobot::debug > {
  static const char* value()
  {
    return "gbrobot/debug";
  }

  static const char* value(const ::gbrobot::debug&) { return value(); }
};


// service_traits::MD5Sum< ::gbrobot::debugRequest> should match 
// service_traits::MD5Sum< ::gbrobot::debug > 
template<>
struct MD5Sum< ::gbrobot::debugRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gbrobot::debug >::value();
  }
  static const char* value(const ::gbrobot::debugRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gbrobot::debugRequest> should match 
// service_traits::DataType< ::gbrobot::debug > 
template<>
struct DataType< ::gbrobot::debugRequest>
{
  static const char* value()
  {
    return DataType< ::gbrobot::debug >::value();
  }
  static const char* value(const ::gbrobot::debugRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gbrobot::debugResponse> should match 
// service_traits::MD5Sum< ::gbrobot::debug > 
template<>
struct MD5Sum< ::gbrobot::debugResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gbrobot::debug >::value();
  }
  static const char* value(const ::gbrobot::debugResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gbrobot::debugResponse> should match 
// service_traits::DataType< ::gbrobot::debug > 
template<>
struct DataType< ::gbrobot::debugResponse>
{
  static const char* value()
  {
    return DataType< ::gbrobot::debug >::value();
  }
  static const char* value(const ::gbrobot::debugResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GBROBOT_MESSAGE_DEBUG_H
